plugins{
    id 'de.kontext-e.jqassistant.gradle' version "3.0.0"
    id 'groovy'
    id 'java'
    id 'signing'
    id 'maven-publish'
}

project.ext["jqaversion"] = "2.4.0"
project.group = 'de.kontext-e.jqassistant.plugin'
project.version = '2.3.0'

repositories {
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    implementation 'com.buschmais.jqassistant.core:scanner:' + project.jqaversion
    implementation 'com.buschmais.jqassistant.core:report:' + project.jqaversion
    implementation 'com.buschmais.jqassistant.plugin:common:' + project.jqaversion
    implementation 'com.buschmais.jqassistant.core:store:' + project.jqaversion
    implementation 'org.eclipse.jgit:org.eclipse.jgit:6.9.0.202403050737-r'

    testImplementation 'com.buschmais.jqassistant.core:test:' + project.jqaversion
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testImplementation 'org.mockito:mockito-core:5.11.0'

    testImplementation 'org.slf4j:slf4j-simple:2.0.13'

    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
}

tasks.named('processResources') {
    filesMatching('**/*.properties') {
        expand(project.properties)
    }
    filesMatching('**/*.xml') {
        expand(project.properties)
    }
}

tasks.matching { task ->
    task.group == 'publishing'
}.configureEach { task ->
    task.dependsOn ':clean'
}

java {
    withJavadocJar()
    withSourcesJar()

    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'ke-jqassistant-plugins'
                packaging = 'jar'
                description = 'jQAssistant Git plugin sponsored by Kontext E'
                url = 'https://github.com/kontext-e/jqassistant-git-plugin'

                licenses {
                    license {
                        name = 'GNU General Public License, v3'
                        url = 'http://www.gnu.org/licenses/gpl-3.0.html'
                        distribution = 'repo'
                    }
                }

                scm {
                    url = 'scm:git@github.com/kontext-e/jqassistant-git-plugin'
                    connection = 'scm:git@github.com/kontext-e/jqassistant-git-plugin'
                    developerConnection = 'scm:git@github.com/kontext-e/jqassistant-git-plugin'
                }

                developers {
                    developer {
                        id = 'jens-nerche'
                        name = 'Jens Nerche'
                        email = 'j.nerche@kontext-e.de'
                    }
                    developer {
                        id = 'gerd-aschemann'
                        name = 'Gerd Aschemann'
                        email = 'gerd@aschemann.net'
                    }
                    developer{
                        id = 'william-thimm'
                        name = 'William Thimm'
                        email = 'w.thimm@kontext-e.de'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            if (project.version.toUpperCase().contains("SNAPSHOT")){
                url = "https://oss.sonatype.org/content/repositories/snapshots"
            } else {
                url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            }
            credentials{
                username = sonatypeUsername
                password = sonatypePassword
            }
        }
        mavenLocal()
    }
}

publish.dependsOn jar, sourcesJar, javadocJar

signing {
    //I assume this only works with gpg installed.
    //On windows this comes packaged with Kleopatra
    useGpgCmd()
    sign publishing.publications.mavenJava
}

jqassistant {
    toolVersion '2.1.0'
    neo4jVersion 4
}